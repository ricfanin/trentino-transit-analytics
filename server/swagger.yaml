openapi: 3.0.0
info:
  title: API Documentation
  description: API documentation for authentication and comments
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /auth/register:
    post:
      summary: Register as user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 8
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Duplicate email

  /auth/login:
    post:
      summary: Login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Successful login
        "401":
          description: Invalid credentials

  /auth/logout:
    post:
      summary: Logout
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        "204":
          description: Successfully logged out
        "404":
          description: Token not found

  /auth/refresh-tokens:
    post:
      summary: Refresh authentication tokens
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
      responses:
        "200":
          description: Tokens refreshed
        "401":
          description: Unauthorized

  /comments:
    post:
      summary: Create a new comment
      tags: [Comments]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                content:
                  type: string
      responses:
        "201":
          description: Comment created
    patch:
      summary: Update a comment
      tags: [Comments]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                commentId:
                  type: string
                content:
                  type: string
      responses:
        "200":
          description: Comment updated
    get:
      summary: Get comments by user
      tags: [Comments]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of comments

  /comments/{commentId}:
    delete:
      summary: Delete a comment
      tags: [Comments]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Comment deleted

  /comments/post:
    get:
      summary: Get comments by post ID
      tags: [Comments]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of comments for the post

  /comments/user:
    get:
      summary: Get comments by user
      tags: [Comments]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of user comments

  /posts:
    post:
      summary: Create a new post
      tags: [Posts]
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Post created
    patch:
      summary: Update a post
      tags: [Posts]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Post updated

  /votes:
    post:
      summary: Vote on a post
      tags: [Votes]
      security:
        - bearerAuth: []
      responses:
        "201":
          description: Vote registered
    delete:
      summary: Remove a vote
      tags: [Votes]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Vote removed

  /users:
    get:
      summary: Get authenticated user profile
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile retrieved

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
    AuthTokens:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
